<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[梦痕]]></title>
  <subtitle><![CDATA[人走到任何境地都是因为自己]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://www.dreamxuwj.com/"/>
  <updated>2015-07-13T16:11:41.109Z</updated>
  <id>http://www.dreamxuwj.com/</id>
  
  <author>
    <name><![CDATA[dream.xuwj]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[开源总结（一）：EventBus的使用和源码分析]]></title>
    <link href="http://www.dreamxuwj.com/2015/07/13/%E5%BC%80%E6%BA%90%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9AEventBus%E7%9A%84%E4%BD%BF%E7%94%A8%E5%92%8C%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>http://www.dreamxuwj.com/2015/07/13/开源总结（一）：EventBus的使用和源码分析/</id>
    <published>2015-07-12T17:13:08.000Z</published>
    <updated>2015-07-13T16:11:41.109Z</updated>
    <content type="html"><![CDATA[<blockquote>
<ul>
<li>df </li>
<li>df</li>
<li>df</li>
</ul>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<ul>
<li>df </li>
<li>df</li>
<li>df</li>
</ul>
</blockquote>
]]>
    </summary>
    
      <category term="EventBus" scheme="http://www.dreamxuwj.com/tags/EventBus/"/>
    
      <category term="移动开发" scheme="http://www.dreamxuwj.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android自定义View总结]]></title>
    <link href="http://www.dreamxuwj.com/2015/06/20/Android%E8%87%AA%E5%AE%9A%E4%B9%89View%E6%80%BB%E7%BB%93/"/>
    <id>http://www.dreamxuwj.com/2015/06/20/Android自定义View总结/</id>
    <published>2015-06-19T17:07:03.000Z</published>
    <updated>2015-07-07T17:43:32.001Z</updated>
    <content type="html"><![CDATA[<p>在android开发中，官方给我们的原生控件往往无法满足我们的需求，这时候我们经常要自定义控件，除了实现功能的需求外，当然也存在着点装逼成分，哈，下面是我关于自定义控件的一些总结。<br><a id="more"></a><br>推荐爱哥关于自定义控件的blog：<a href="http://blog.csdn.net/aigestudio/article/details/41212583" target="_blank" rel="external">自定义控件其实很简单</a></p>
<h1 id="步骤">步骤</h1><ul>
<li><strong>自定义<code>View</code>的属性</strong></li>
<li><strong>在<code>View</code>的构造方法获取我们自定义的属性值</strong></li>
<li><strong>重写<code>onMesure()</code>方法</strong></li>
<li><strong>重写<code>onDraw()</code>方法</strong></li>
</ul>
<h1 id="自定义View的属性">自定义View的属性</h1><p>在<code>res/values/</code>下建立<code>attrs.xml</code>，定义控件的属性和样式，如下所示：<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;declare-styleable <span class="variable">name=</span><span class="string">"CircleImageView"</span>&gt;</span><br><span class="line">    &lt;attr <span class="variable">name=</span><span class="string">"border_width"</span> <span class="variable">format=</span><span class="string">"dimension"</span> /&gt;</span><br><span class="line">    &lt;attr <span class="variable">name=</span><span class="string">"border_color"</span> <span class="variable">format=</span><span class="string">"color"</span> /&gt;</span><br><span class="line">&lt;/declare-styleable&gt;</span><br></pre></td></tr></table></figure></p>
<p><code>format</code>为取值类型，有以下类型：</p>
<ul>
<li><strong>string 字符串</strong></li>
<li><strong>color 颜色值，如#ffffff</strong></li>
<li><strong>dimension 尺寸，xml中设置为dp/dip, 字体为sp</strong></li>
<li><strong>integer 数值 1</strong></li>
<li><strong>enum 枚举类型</strong></li>
<li><strong>reference 引用，如@drawable/ic_launcher</strong></li>
<li><strong>float 浮点类型 如1.0</strong></li>
<li><strong>boolean 布尔类型 true或false</strong></li>
<li><strong>fraction 百分数 如100%</strong></li>
<li><strong>flag 位或运算</strong></li>
</ul>
<p>在xml布局文件中，声明我们的自定义View，示例代码：<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;com.infzm.o2o.view.CircleImageView</span><br><span class="line">       xmlns:<span class="variable">app=</span><span class="string">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">       android:<span class="variable">id=</span><span class="string">"@+id/iv_head_icon"</span></span><br><span class="line">       android:<span class="variable">layout_width=</span><span class="string">"wrap_content"</span></span><br><span class="line">       android:<span class="variable">layout_height=</span><span class="string">"59dp"</span></span><br><span class="line">       android:<span class="variable">layout_marginBottom=</span><span class="string">"15dp"</span></span><br><span class="line">       android:<span class="variable">layout_marginLeft=</span><span class="string">"15dp"</span></span><br><span class="line">       android:<span class="variable">src=</span><span class="string">"@drawable/ic_profile_user_default"</span></span><br><span class="line">       app:<span class="variable">border_color=</span><span class="string">"@color/white"</span></span><br><span class="line">       app:<span class="variable">border_width=</span><span class="string">"2dp"</span> &gt;</span><br></pre></td></tr></table></figure></p>
<h1 id="在View的构造方法获取我们自定义的属性值">在View的构造方法获取我们自定义的属性值</h1><p>重写3个构造方法，示例代码如下：<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">CircleImageView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">super</span>(context);</span><br><span class="line"></span><br><span class="line">       init();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">CircleImageView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">this</span>(context, attrs, <span class="number">0</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">CircleImageView</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyle)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">super</span>(context, attrs, defStyle);</span><br><span class="line"></span><br><span class="line">       TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.CircleImageView, defStyle, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 获取边界的宽度</span></span><br><span class="line">       mBorderWidth = a.getDimensionPixelSize(R.styleable.CircleImageView_border_width, DEFAULT_BORDER_WIDTH);</span><br><span class="line">       <span class="comment">// 获取边界的颜色</span></span><br><span class="line">       mBorderColor = a.getColor(R.styleable.CircleImageView_border_color, DEFAULT_BORDER_COLOR);</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 回收TypedArray,以便后面重用</span></span><br><span class="line">       a.recycle();</span><br><span class="line"></span><br><span class="line">       init();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="重写onMesure()方法">重写onMesure()方法</h1><p>这个方法用来计算View的大小，如果需要计算View的大小，则需要重写此方法。<br>示例代码：<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">@Override  </span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> onMeasure(<span class="built_in">int</span> widthMeasureSpec, <span class="built_in">int</span> heightMeasureSpec) &#123;  </span><br><span class="line">    <span class="built_in">int</span> widthMode = MeasureSpec.getMode(widthMeasureSpec);  </span><br><span class="line">    <span class="built_in">int</span> heightMode = MeasureSpec.getMode(heightMeasureSpec);  </span><br><span class="line">    <span class="built_in">int</span> widthSize = MeasureSpec.getSize(widthMeasureSpec);  </span><br><span class="line">    <span class="built_in">int</span> heightSize = MeasureSpec.getSize(heightMeasureSpec);  </span><br><span class="line"></span><br><span class="line">    <span class="built_in">int</span> <span class="variable">width</span>;  </span><br><span class="line">    <span class="built_in">int</span> <span class="variable">height</span>;  </span><br><span class="line"></span><br><span class="line">    ...   </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (widthMode == MeasureSpec.EXACTLY) &#123;  </span><br><span class="line">        <span class="comment">// Parent has told us how big to be. So be it.  </span></span><br><span class="line">        <span class="variable">width</span> = widthSize;  </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">        <span class="keyword">if</span> (mLayout != <span class="keyword">null</span> &amp;&amp; mEllipsize == <span class="keyword">null</span>) &#123;  </span><br><span class="line">            des = desired(mLayout);  </span><br><span class="line">        &#125;  </span><br><span class="line"></span><br><span class="line">    ...  </span><br><span class="line"></span><br><span class="line">    setMeasuredDimension(<span class="variable">width</span>, <span class="variable">height</span>);   </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="重写onDraw()方法">重写onDraw()方法</h1><p>我们通过这个方法来绘制我们的视图，示例代码：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="typename">void</span> onDraw(Canvas canvas) &#123;</span><br><span class="line">    <span class="keyword">if</span> (getDrawable() == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    canvas.drawCircle(getWidth() <span class="regexp">/ 2, getHeight() /</span> <span class="number">2</span>, mDrawableRadius, mBitmapPaint);</span><br><span class="line">    <span class="keyword">if</span> (mBorderWidth != <span class="number">0</span>) &#123;</span><br><span class="line">        canvas.drawCircle(getWidth() <span class="regexp">/ 2, getHeight() /</span> <span class="number">2</span>, mBorderRadius, mBorderPaint);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><br><br>开源控件—&gt;自定义圆形头像的解析：<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.infzm.o2o.view;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.infzm.o2o.R;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.res.TypedArray;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Bitmap;</span><br><span class="line"><span class="keyword">import</span> android.graphics.BitmapShader;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Canvas;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Color;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Matrix;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Paint;</span><br><span class="line"><span class="keyword">import</span> android.graphics.RectF;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Shader;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.BitmapDrawable;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.ColorDrawable;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.Drawable;</span><br><span class="line"><span class="keyword">import</span> android.net.Uri;</span><br><span class="line"><span class="keyword">import</span> android.util.AttributeSet;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 自定义圆形头像</span><br><span class="line"> * @author wwj_748</span><br><span class="line"> *</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> class CircleImageView extends ImageView &#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span><br><span class="line">	 * 缩放类型</span><br><span class="line">	 */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ScaleType SCALE_TYPE = ScaleType.CENTER_CROP;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 位图配置</span><br><span class="line">     * ARGB_8888代表</span><br><span class="line">     * A:透明度:8</span><br><span class="line">     * R:红色:8</span><br><span class="line">     * G:绿:8</span><br><span class="line">     * B:蓝:8</span><br><span class="line">     * 表示图片每个像素点占8+8+8+8 = 32位</span><br><span class="line">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Bitmap.Config BITMAP_CONFIG = Bitmap.Config.ARGB_8888;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="built_in">int</span> COLORDRAWABLE_DIMENSION = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="built_in">int</span> DEFAULT_BORDER_WIDTH = <span class="number">0</span>; <span class="comment">// 默认边界宽度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="built_in">int</span> DEFAULT_BORDER_COLOR = Color.BLACK; <span class="comment">// 默认边界颜色</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> RectF mDrawableRect = <span class="keyword">new</span> RectF();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> RectF mBorderRect = <span class="keyword">new</span> RectF();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Matrix mShaderMatrix = <span class="keyword">new</span> Matrix();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Paint mBitmapPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Paint mBorderPaint = <span class="keyword">new</span> Paint();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> mBorderColor = DEFAULT_BORDER_COLOR;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> mBorderWidth = DEFAULT_BORDER_WIDTH;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Bitmap mBitmap;</span><br><span class="line">    <span class="keyword">private</span> BitmapShader mBitmapShader; <span class="comment">// 位图渲染</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> mBitmapWidth; <span class="comment">// 位图宽度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> mBitmapHeight; <span class="comment">// 位图高度</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> mDrawableRadius; <span class="comment">// 图片半径</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> mBorderRadius;  <span class="comment">// 带边框的的图片半径</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">boolean</span> mReady;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">boolean</span> mSetupPending;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> CircleImageView(Context context) &#123;</span><br><span class="line">        <span class="keyword">super</span>(context);</span><br><span class="line"></span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> CircleImageView(Context context, AttributeSet attrs) &#123;</span><br><span class="line">        <span class="keyword">this</span>(context, attrs, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> CircleImageView(Context context, AttributeSet attrs, <span class="built_in">int</span> defStyle) &#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs, defStyle);</span><br><span class="line"></span><br><span class="line">        TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.CircleImageView, defStyle, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取边界的宽度</span></span><br><span class="line">        mBorderWidth = a.getDimensionPixelSize(R.styleable.CircleImageView_border_width, DEFAULT_BORDER_WIDTH);</span><br><span class="line">        <span class="comment">// 获取边界的颜色</span></span><br><span class="line">        mBorderColor = a.getColor(R.styleable.CircleImageView_border_color, DEFAULT_BORDER_COLOR);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 回收TypedArray,以便后面重用</span></span><br><span class="line">        a.recycle();</span><br><span class="line"></span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> init() &#123;</span><br><span class="line">        <span class="keyword">super</span>.setScaleType(SCALE_TYPE);</span><br><span class="line">        mReady = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mSetupPending) &#123;</span><br><span class="line">            <span class="title">setup</span>();</span><br><span class="line">            mSetupPending = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> ScaleType getScaleType() &#123;</span><br><span class="line">        <span class="keyword">return</span> SCALE_TYPE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> setScaleType(ScaleType scaleType) &#123;</span><br><span class="line">        <span class="keyword">if</span> (scaleType != SCALE_TYPE) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="keyword">String</span>.format(<span class="string">"ScaleType %s not supported."</span>, scaleType));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onDraw(Canvas canvas) &#123;</span><br><span class="line">        <span class="keyword">if</span> (getDrawable() == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 绘制圆形图片</span></span><br><span class="line">        canvas.drawCircle(getWidth() / <span class="number">2</span>, getHeight() / <span class="number">2</span>, mDrawableRadius, mBitmapPaint);</span><br><span class="line">        <span class="keyword">if</span> (mBorderWidth != <span class="number">0</span>) &#123; <span class="comment">// 如果边界不为0，怎绘制带边框的圆形图片</span></span><br><span class="line">            canvas.drawCircle(getWidth() / <span class="number">2</span>, getHeight() / <span class="number">2</span>, mBorderRadius, mBorderPaint);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> onSizeChanged(<span class="built_in">int</span> w, <span class="built_in">int</span> h, <span class="built_in">int</span> oldw, <span class="built_in">int</span> oldh) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onSizeChanged(w, h, oldw, oldh);</span><br><span class="line">        <span class="title">setup</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> getBorderColor() &#123;</span><br><span class="line">        <span class="keyword">return</span> mBorderColor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> setBorderColor(<span class="built_in">int</span> borderColor) &#123;</span><br><span class="line">        <span class="keyword">if</span> (borderColor == mBorderColor) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        mBorderColor = borderColor;</span><br><span class="line">        mBorderPaint.setColor(mBorderColor);</span><br><span class="line">        invalidate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> getBorderWidth() &#123;</span><br><span class="line">        <span class="keyword">return</span> mBorderWidth;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> setBorderWidth(<span class="built_in">int</span> borderWidth) &#123;</span><br><span class="line">        <span class="keyword">if</span> (borderWidth == mBorderWidth) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        mBorderWidth = borderWidth;</span><br><span class="line">        <span class="title">setup</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> setImageBitmap(Bitmap bm) &#123;</span><br><span class="line">        <span class="keyword">super</span>.setImageBitmap(bm);</span><br><span class="line">        mBitmap = bm;</span><br><span class="line">        <span class="title">setup</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> setImageDrawable(Drawable drawable) &#123;</span><br><span class="line">        <span class="keyword">super</span>.setImageDrawable(drawable);</span><br><span class="line">        mBitmap = getBitmapFromDrawable(drawable);</span><br><span class="line">        <span class="title">setup</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> setImageResource(<span class="built_in">int</span> resId) &#123;</span><br><span class="line">        <span class="keyword">super</span>.setImageResource(resId);</span><br><span class="line">        mBitmap = getBitmapFromDrawable(getDrawable());</span><br><span class="line">        <span class="title">setup</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> setImageURI(Uri uri) &#123;</span><br><span class="line">        <span class="keyword">super</span>.setImageURI(uri);</span><br><span class="line">        mBitmap = getBitmapFromDrawable(getDrawable());</span><br><span class="line">        <span class="title">setup</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * Drawable转Bitmap</span><br><span class="line">     * @param drawable</span><br><span class="line">     * @return</span><br><span class="line">     */</span></span><br><span class="line">    <span class="keyword">private</span> Bitmap getBitmapFromDrawable(Drawable drawable) &#123;</span><br><span class="line">        <span class="keyword">if</span> (drawable == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (drawable <span class="keyword">instanceof</span> BitmapDrawable) &#123;</span><br><span class="line">            <span class="keyword">return</span> ((BitmapDrawable) drawable).getBitmap();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Bitmap bitmap;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (drawable <span class="keyword">instanceof</span> ColorDrawable) &#123;</span><br><span class="line">                bitmap = Bitmap.createBitmap(COLORDRAWABLE_DIMENSION, COLORDRAWABLE_DIMENSION, BITMAP_CONFIG);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                bitmap = Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(), BITMAP_CONFIG);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Canvas canvas = <span class="keyword">new</span> Canvas(bitmap);</span><br><span class="line">            drawable.setBounds(<span class="number">0</span>, <span class="number">0</span>, canvas.getWidth(), canvas.getHeight());</span><br><span class="line">            drawable.<span class="title">draw</span>(canvas);</span><br><span class="line">            <span class="keyword">return</span> bitmap;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (OutOfMemoryError e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setup</span>() &#123;</span><br><span class="line">        <span class="keyword">if</span> (!mReady) &#123;</span><br><span class="line">            mSetupPending = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mBitmap == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 构建渲染器</span></span><br><span class="line">        mBitmapShader = <span class="keyword">new</span> BitmapShader(mBitmap, Shader.TileMode.CLAMP, Shader.TileMode.CLAMP);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 设置反锯齿</span></span><br><span class="line">        mBitmapPaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">// 设置画笔渲染器</span></span><br><span class="line">        mBitmapPaint.setShader(mBitmapShader);</span><br><span class="line">        <span class="comment">// 设置画笔样式</span></span><br><span class="line">        mBorderPaint.setStyle(Paint.Style.STROKE);</span><br><span class="line">        mBorderPaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line">        mBorderPaint.setColor(mBorderColor);</span><br><span class="line">        mBorderPaint.setStrokeWidth(mBorderWidth);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 得到位图宽高</span></span><br><span class="line">        mBitmapHeight = mBitmap.getHeight();</span><br><span class="line">        mBitmapWidth = mBitmap.getWidth();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 设置含边框显示区域</span></span><br><span class="line">        mBorderRect.<span class="built_in">set</span>(<span class="number">0</span>, <span class="number">0</span>, getWidth(), getHeight());</span><br><span class="line">        <span class="comment">// 计算半径</span></span><br><span class="line">        mBorderRadius = Math.<span class="built_in">min</span>((mBorderRect.<span class="variable">height</span>() - mBorderWidth) / <span class="number">2</span>, (mBorderRect.<span class="variable">width</span>() - mBorderWidth) / <span class="number">2</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 设置图片显示区域：即View的大小区域减去边界的大小</span></span><br><span class="line">        mDrawableRect.<span class="built_in">set</span>(mBorderWidth, mBorderWidth, mBorderRect.<span class="variable">width</span>() - mBorderWidth, mBorderRect.<span class="variable">height</span>() - mBorderWidth);</span><br><span class="line">        <span class="comment">// 计算图片区域的半径</span></span><br><span class="line">        mDrawableRadius = Math.<span class="built_in">min</span>(mDrawableRect.<span class="variable">height</span>() / <span class="number">2</span>, mDrawableRect.<span class="variable">width</span>() / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        updateShaderMatrix();</span><br><span class="line">        invalidate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> updateShaderMatrix() &#123;</span><br><span class="line">        <span class="built_in">float</span> <span class="built_in">scale</span>;</span><br><span class="line">        <span class="built_in">float</span> dx = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">float</span> dy = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        mShaderMatrix.<span class="built_in">set</span>(<span class="keyword">null</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 如果位图的高度*显示图片区域的高度 大于 位图高度 * 图片区域宽度</span></span><br><span class="line">        <span class="keyword">if</span> (mBitmapWidth * mDrawableRect.<span class="variable">height</span>() &gt; mDrawableRect.<span class="variable">width</span>() * mBitmapHeight) &#123;</span><br><span class="line">        	<span class="comment">// 按高计算缩放比例</span></span><br><span class="line">            <span class="built_in">scale</span> = mDrawableRect.<span class="variable">height</span>() / (<span class="built_in">float</span>) mBitmapHeight;</span><br><span class="line">            dx = (mDrawableRect.<span class="variable">width</span>() - mBitmapWidth * <span class="built_in">scale</span>) * <span class="number">0.5</span>f;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        	<span class="comment">// 按宽计算缩放比例</span></span><br><span class="line">            <span class="built_in">scale</span> = mDrawableRect.<span class="variable">width</span>() / (<span class="built_in">float</span>) mBitmapWidth;</span><br><span class="line">            dy = (mDrawableRect.<span class="variable">height</span>() - mBitmapHeight * <span class="built_in">scale</span>) * <span class="number">0.5</span>f;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// shaeder的变换矩阵，我们这里主要用于放大或者缩小。</span></span><br><span class="line">        mShaderMatrix.setScale(<span class="built_in">scale</span>, <span class="built_in">scale</span>);</span><br><span class="line">        <span class="comment">// 平移</span></span><br><span class="line">        mShaderMatrix.postTranslate((<span class="built_in">int</span>) (dx + <span class="number">0.5</span>f) + mBorderWidth, (<span class="built_in">int</span>) (dy + <span class="number">0.5</span>f) + mBorderWidth);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置变换矩阵</span></span><br><span class="line">        mBitmapShader.setLocalMatrix(mShaderMatrix);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在android开发中，官方给我们的原生控件往往无法满足我们的需求，这时候我们经常要自定义控件，除了实现功能的需求外，当然也存在着点装逼成分，哈，下面是我关于自定义控件的一些总结。<br>]]>
    
    </summary>
    
      <category term="自定义控件" scheme="http://www.dreamxuwj.com/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
      <category term="移动开发" scheme="http://www.dreamxuwj.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[AndroidStudio中如何使用Git和Github来管理项目]]></title>
    <link href="http://www.dreamxuwj.com/2015/06/11/Android%20Studio%E4%B8%AD%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Git%E5%92%8CGithub%E6%9D%A5%E7%AE%A1%E7%90%86%E9%A1%B9%E7%9B%AE/"/>
    <id>http://www.dreamxuwj.com/2015/06/11/Android Studio中如何使用Git和Github来管理项目/</id>
    <published>2015-06-11T13:35:37.000Z</published>
    <updated>2015-06-11T13:53:45.976Z</updated>
    <content type="html"><![CDATA[<p>由于本人是个屌丝，还没用起高大尚mac，所以本篇文章介绍的是基于window系统的</p>
<p>As we know，<code>Git</code>是目前世界上最先进的分布式版本控制系统，而<code>Github</code>是最大的开源社区。在<code>Github</code>上的项目就是使用<code>git</code>来管理的，所以学好<code>Git</code>的使用是很有必要的。下面看具体步骤。<br><a id="more"></a><br>1、要在as中使用<code>git</code>，首先你的在本地安装<code>Git</code>，具体安装流程大家可以看我blog：<a href="http://blog.csdn.net/wei18359100306/article/details/41255963" target="_blank" rel="external">版本控制工具Git详解</a>​<br>2、在<code>studio</code>中配置<code>git</code>插件：File-&gt;Setting-&gt;Version Control-&gt;Git, 然后选择你本地的<code>Git</code>安装路径（需要定位到bin目录下的git.exe），然后点击Test测试一下，结果如下图：那么恭喜你，你已经设置成功了！<br><img src="http://img.blog.csdn.net/20150511161822998" alt=""></p>
<p>3、将项目初始化git项目(<code>git init</code>)，操作如下：VCS-&gt;Enable Control Integration-&gt;Select “Git”.（当然也可以使用git命令，自行选择）<br><img src="http://img.blog.csdn.net/20150511161945740" alt=""><br><img src="http://img.blog.csdn.net/20150511162206767" alt=""></p>
<p>完成后会出现红框内的按钮<br><img src="http://img.blog.csdn.net/20150511162227952" alt=""></p>
<p>4、上传项目到Github前的准备-&gt;忽略部分文件（如将gen .idea  .iml等）<br>上传项目前要先扩展插件，以便于忽略一些不必要提交的文件，点击项目根目录下的.gitignore文件，出现下图，点击右上角安装插件<br><img src="http://img.blog.csdn.net/20150511163225571" alt=""></p>
<p><img src="http://img.blog.csdn.net/20150511163304181" alt=""></p>
<p>然后你就可以在<code>gitignore</code>中写出你想忽略的那些文件的名字，一般忽略以上文件即可</p>
<p><strong>note</strong>：很多情况下<code>gitignore</code>是不起作用的，既在你上传到服务器时是不起作用的，这时你可以如下图这样做（第一是添加文件，第二是添加文件夹）<br><img src="http://img.blog.csdn.net/20150511163344429" alt=""></p>
<p>5、上传项目到Github前的准备-&gt;登陆Github（没有Github账号的请自行去<a href="https://github.com" target="_blank" rel="external">注册</a>）<br><img src="http://img.blog.csdn.net/20150511162715567" alt=""></p>
<p>6、share到Github（VCS&gt;Import into Version Control&gt;Share Project on GitHub）<br><img src="http://img.blog.csdn.net/20150511163114856" alt=""></p>
<p>7、添加仓库名称和描述<br><img src="http://img.blog.csdn.net/20150511162114473" alt=""></p>
<p>8、选择要提交的文件，并对此次提交做一个描述，<strong>对比第四步的note，是不是发现我们ignore掉的文件都没在此出现！</strong><br><img src="http://img.blog.csdn.net/20150511162602497" alt=""></p>
<p>9、登陆Github，查看仓库<br><img src="http://img.blog.csdn.net/20150511162707021" alt=""></p>
<h2 id=""><br></h2><p><br><br>既然Github是用来分布式控制版本系统，那我们如何将已经上传到Github的项目<code>Clone</code>到本地呢<br>1、<code>VCS-&gt;Checkout from Version Control-&gt;GitHub</code>,如图选择想要克隆的项目，设置好目录和项目名称，点击<code>Clone</code>即可。Android Studio 会在本地新建一个Project.<br><img src="http://img.blog.csdn.net/20150511163141270" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>由于本人是个屌丝，还没用起高大尚mac，所以本篇文章介绍的是基于window系统的</p>
<p>As we know，<code>Git</code>是目前世界上最先进的分布式版本控制系统，而<code>Github</code>是最大的开源社区。在<code>Github</code>上的项目就是使用<code>git</code>来管理的，所以学好<code>Git</code>的使用是很有必要的。下面看具体步骤。<br>]]>
    
    </summary>
    
      <category term="Git使用" scheme="http://www.dreamxuwj.com/tags/Git%E4%BD%BF%E7%94%A8/"/>
    
      <category term="移动开发" scheme="http://www.dreamxuwj.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[android studio离线更新]]></title>
    <link href="http://www.dreamxuwj.com/2015/05/28/android%20studio%E7%A6%BB%E7%BA%BF%E6%9B%B4%E6%96%B0/"/>
    <id>http://www.dreamxuwj.com/2015/05/28/android studio离线更新/</id>
    <published>2015-05-28T03:53:29.000Z</published>
    <updated>2015-05-30T15:22:58.800Z</updated>
    <content type="html"><![CDATA[<h1 id="为什么进行离线更新？">为什么进行离线更新？</h1><p>很多软件，要是能在线更新，我想没有哪个人会无聊到自己去更新…废话截止…下面讲原因，原因有二</p>
<ol>
<li>生活在天朝，伟大的墙<code>GFW</code>阻拦了我们看世界<a id="more"></a></li>
<li>Google最近发疯，点击<strong>Menu-Help-check for update…</strong> 出现下图，点击以后要你下载整个安装包…<br><img src="http://7xj4l6.com1.z0.glb.clouddn.com/QQ图片20150528112043.png" alt=""></li>
</ol>
<h1 id="如何进行离线更新？">如何进行离线更新？</h1><h2 id="获取本地自己的版本信息">获取本地自己的版本信息</h2><p>打开<strong>Menu-Help-About</strong>，找到当前安装的版本号,如下图，也可以到自己的<code>android studio</code>安装目录下，找到<code>build.txt</code>文件，打开查看,可以看出我当前的版本号为：<code>135.1740770</code><br><img src="http://7xj4l6.com1.z0.glb.clouddn.com/QQ图片20150528142238.png" alt=""></p>
<h2 id="获取最新版本信息">获取最新版本信息</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http<span class="variable">s:</span>//<span class="keyword">dl</span>.google.<span class="keyword">com</span>/android/studio/patches/updates.xml</span><br></pre></td></tr></table></figure>
<p>如下图：可以看出最新的版本号为：<code>141.1903250</code>,以及一些历史版本号,不要以为这些历史版本号没用，亲，还是会用到的，存在即必然…<br><img src="http://7xj4l6.com1.z0.glb.clouddn.com/QQ截图20150528140717.png" alt=""></p>
<h2 id="离线更新包的下载">离线更新包的下载</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http<span class="variable">s:</span>//<span class="keyword">dl</span>.google.<span class="keyword">com</span>/android/studio/patches/AI-<span class="number">135.1740770</span>-<span class="number">141.1901332</span>-patch-win.jar</span><br></pre></td></tr></table></figure>
<p><code>135.1740770</code>:当前版本号<br><code>141.1901332</code>:最新版本号,也是你自己安装的目标版本号<br>即下载<code>url</code>拼接如下<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="link_url">https://dl.google.com/android/studio/patches/AI-</span>[<span class="link_label">当前安装版本号</span>]-[更新的目标版本]-patch-win.jar</span><br></pre></td></tr></table></figure></p>
<h2 id="离线更新包的安装">离线更新包的安装</h2><p><code>关闭所有</code>与<code>Android Studio</code>相关的任务,把上一步下载的jar拷贝到某一个目录下（<code>注：不能拷贝到android studio 的安装目录！</code>），启动<code>cmd</code>，将路径定位到jar的相关文件夹中，输入如下命令<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -classpath AI-<span class="number">135.1740770</span>-<span class="number">141.1901332</span>-patch-win<span class="class">.jar</span> com<span class="class">.intellij</span><span class="class">.updater</span><span class="class">.Runner</span> install [android studio的安装目录]</span><br></pre></td></tr></table></figure></p>
<p>安装过程截图如下：<br><img src="http://7xj4l6.com1.z0.glb.clouddn.com/1234.png" alt=""><br>安装完后，重复第一步的步骤，看到版本已经更新到最新了<br><img src="http://7xj4l6.com1.z0.glb.clouddn.com/QQ截图20150528145528.png" alt=""></p>
<p><code>注意事项：</code></p>
<ul>
<li>安装的时候一定不要把<code>jar</code>拷贝到<code>android studio</code>的安装目录中！</li>
<li>安装的时候一定要关闭<code>android studio</code>!<br>如果上面两步不注意，可能出现如下错误<br><img src="http://7xj4l6.com1.z0.glb.clouddn.com/QQ图片20150528144931.png" alt=""></li>
</ul>
<p>亲，如果还安装不成功，请留言…</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="为什么进行离线更新？">为什么进行离线更新？</h1><p>很多软件，要是能在线更新，我想没有哪个人会无聊到自己去更新…废话截止…下面讲原因，原因有二</p>
<ol>
<li>生活在天朝，伟大的墙<code>GFW</code>阻拦了我们看世界]]>
    
    </summary>
    
      <category term="studio离线更新" scheme="http://www.dreamxuwj.com/tags/studio%E7%A6%BB%E7%BA%BF%E6%9B%B4%E6%96%B0/"/>
    
      <category term="移动开发" scheme="http://www.dreamxuwj.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[android反编译APK的那些事]]></title>
    <link href="http://www.dreamxuwj.com/2015/05/26/android%E5%8F%8D%E7%BC%96%E8%AF%91APK%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    <id>http://www.dreamxuwj.com/2015/05/26/android反编译APK的那些事/</id>
    <published>2015-05-26T11:41:38.000Z</published>
    <updated>2015-05-30T05:59:38.224Z</updated>
    <content type="html"><![CDATA[<p>反编译工具最新下载地址 <a href="http://download.csdn.net/detail/wei18359100306/8741985" target="_blank" rel="external">传送门</a><br><a id="more"></a></p>
<h1 id="工具介绍：">工具介绍：</h1><ul>
<li><strong>apktool</strong><br>资源文件获取，可以提取出图片文件和布局文件进行使用查看</li>
<li><strong>dex2jar</strong><br>将<code>apk</code>反编译成<code>java</code>源码（classes.dex转化成jar文件）</li>
<li><strong>jd-gui</strong><br>查看<code>classes.dex</code>转化成出的<code>jar</code>文件</li>
</ul>
<h1 id="工具使用：">工具使用：</h1><p>具体的过程请看我csdn博客—&gt;<a href="http://blog.csdn.net/wei18359100306/article/details/41547333" target="_blank" rel="external">传送门</a></p>
<h1 id="-smali文件的查看">.smali文件的查看</h1><p>反编译后我们要看源代码，可能会看到后缀为<code>.smali</code>,那么我们如何查看这种形式的代码，请看博客—&gt;<a href="http://blog.csdn.net/tmacsky/article/details/44081585" target="_blank" rel="external">利用SublimeText查看Android反编译smali文件</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>反编译工具最新下载地址 <a href="http://download.csdn.net/detail/wei18359100306/8741985">传送门</a><br>]]>
    
    </summary>
    
      <category term="反编译" scheme="http://www.dreamxuwj.com/tags/%E5%8F%8D%E7%BC%96%E8%AF%91/"/>
    
      <category term="移动开发" scheme="http://www.dreamxuwj.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[自定义带动画button]]></title>
    <link href="http://www.dreamxuwj.com/2015/05/21/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B8%A6%E5%8A%A8%E7%94%BBbutton/"/>
    <id>http://www.dreamxuwj.com/2015/05/21/自定义带动画button/</id>
    <published>2015-05-21T14:09:02.000Z</published>
    <updated>2015-07-07T17:47:42.497Z</updated>
    <content type="html"><![CDATA[<p><img src="http://7xj4l6.com1.z0.glb.clouddn.com/sendmsgbtn.gif" alt=""><br><a id="more"></a><br>具体代码请看我<a href="https://github.com/xuwj/SendMsgbuttonDemo" target="_blank" rel="external">Github</a>,有疑问的请留言，具体的讲解有时间在说明…</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://7xj4l6.com1.z0.glb.clouddn.com/sendmsgbtn.gif" alt=""><br>]]>
    
    </summary>
    
      <category term="自定义控件" scheme="http://www.dreamxuwj.com/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
      <category term="移动开发" scheme="http://www.dreamxuwj.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[梦的起点]]></title>
    <link href="http://www.dreamxuwj.com/2015/05/16/%E6%A2%A6%E7%9A%84%E8%B5%B7%E7%82%B9/"/>
    <id>http://www.dreamxuwj.com/2015/05/16/梦的起点/</id>
    <published>2015-05-16T15:16:28.000Z</published>
    <updated>2015-05-30T05:59:38.224Z</updated>
    <content type="html"><![CDATA[<p>终点之美，属于优胜者；起点之美，属于每个人。自觉地进入起点并调动起自己的美，也便是人生的优胜。<br><a id="more"></a></p>
<h1 id="Blog_name">Blog name</h1><p>截止<code>2015-05-16</code>为止，终于拥有了自己的私人空间。也许是感性，也许是喜欢，自己依然用梦痕来标识自己。域名也任性的选择了<code>dreamxuwj.com</code>，梦—-一生相伴。</p>
<h1 id="About_me">About me</h1><p>student of FJNU ,Focus on mobile develop and know some product design</p>
<h1 id="A_words_for_everyone">A words for everyone</h1><p>人走到任何境地都是因为自己</p>
<h1 id="Thanks">Thanks</h1><p>感谢搭建网站过程中所给予帮助的两位朋友<a href="http://codemx.cn" target="_blank" rel="external">墨香</a>和<a href="http://chenfuduo.me/" target="_blank" rel="external">菜鸟</a>，也感谢热爱开源和极具分享精神的developer。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>终点之美，属于优胜者；起点之美，属于每个人。自觉地进入起点并调动起自己的美，也便是人生的优胜。<br>]]>
    
    </summary>
    
      <category term="随笔" scheme="http://www.dreamxuwj.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="随笔生活" scheme="http://www.dreamxuwj.com/categories/%E9%9A%8F%E7%AC%94%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
</feed>